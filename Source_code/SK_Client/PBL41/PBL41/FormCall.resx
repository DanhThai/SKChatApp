<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnStopCam.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAABxJJREFUeF7t3VuopWMcx/E9zIgUF1xQUkop7pTEBSJqksu54UKklHKe0DjMOI6z
        MUpRcqNc4sIFuZGS5BQiSnIxkUPOZDD8/u2ZrFl+a7/Petaz1nre5/1+6tvsdr1rrf7v+2/23mvvtVYA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADWtH7vvwDGXKl+UZ+qU+IT
        AFZtVf+M9Ks6WwGDd60aXY7RJTlLAYN1lXLLsS/+J8FgXaPcUowXS3KqAgZj0pdVk4pv3IFBuE65JVir
        rxTQvOuVW4CuNimgaZuVu/i7ukkBTbtBuYu/q4cV0LQblbv4u3pMAU2LL4/cxd8Vy4HmbVHu4u+K5UDz
        blbu4u+K5UDzblHu4u+K5UDzblPu4u+K5UDzxn9lPTWWA83bptzF3xXLgebdrtzF3xXLgebdodzF3xXL
        0bB4YQFaWblTuYu/K5ajEQeojepJ9a76Ue1R7qRTWjsVGnCm+ki5k0x5sRyNuFT9rdxJprxYjkacof5S
        7iRTXo8qNCC+5/hQuZNMebEcDTlPuZNMeeUuRzwjf/Tqh6jJ48qdaJq+3OXY96Pj+PNcVOYtNX6iafp2
        qByjz6u8FJ9AXb5Toyeapq/EckS7FCrDT69mq9RyRH8qVGb8JFF6JZdjXzXYoO5f/RDuJFF3j6gcay1H
        tGzHqTdUDY+lCuMniLqb13JEyxSv5PiDquGxVGP05FB381yOaBkOUU+oGh5LdcaHQpOb93JEi3ai+kDV
        8Fiq5AZD/y/35UCnWY5okS5T8T4k7nFEEDcY2r9FLUe0CIepZ5W7/9EgbjD0X4tcjmje4p10P1PuvseD
        uMHQaotejmhe1ql4n5Ldyt2vC+IGQysrD6kcsyxHNA9HqheVu7+1grjBDL1lLUdUWryldPyOl7uvriBu
        MENumcsRlXKgipcnmuXPqCFuMENt2csRlXCMelW5258miBvMEHtQ5Si5HNGsLlDfKnfb0wZxgxlatSxH
        lOsgFX/R6G4zN4gbzJCqaTmiHMert5W7vVmCuMEMpdqWI5rWReon5W5r1iBuMEPoAZVjnssRpTpUPa3c
        bZQK4gbTerUuR5TqY+WOLxnEDablal6OKJU7tnQQN5hWq305olTu2NJB3GBaLPdFCBa5HFEqd2zpIG4w
        rdWX5YhSuWNLB3GDaak+LUeUyh1bOogbTCv1bTmiVO7Y0kHcYFroPpVjmcsRpXLHlg7iBtP3+rocUSp3
        bOkgbjB9rs/LEaVyx5YO4gbT1/q+HFEqd2zpIG4wfexelaOm5YhSuWNLB3GD6VutLEeUyh1bOogbTJ9q
        aTmiVO7Y0kHcYPpSa8sRpXLHlg7iBtOHtqscNS9HlModWzqIG0zttbocUSp3bOkgbjA11/JyRKncsaWD
        uMHUWuvLEaVyx5YO4gZTY/eoHH1ajiiVO7Z0EDeY2hrKckSp3LGlg7jB1NSQliNK5Y4tHcQNppaGthxR
        Knds6SBuMDV0t8rR5+WIUrljSwdxg1l2Q12OKNVm9Ydyt1EqiBvMMhvyckTTOFl9otztlAjiBrOshr4c
        0bTiJUifUu62Zg3iBrOM7lI5WlqOKNcm9b1yt5kbxA1m0bEc/zWLY9Vryt1uThA3mEXGcuzfrOK9CW9T
        fyl3+9MEcYNZVHGR52h1OaJSTlefK3cfqUHcYBYRy+Er6XD1rHL3kxLEDWbesRyTm4eL1c/K3d9aQdxg
        5hnLsXbzEu9j+KZy9zkpiBvMvIo3ts8xlOWI5mmDir/j36PcfY8HcYOZRyxHWotwjtql3P2PBnGDKR3L
        kd6iHKFeUO4x7AviBlMylmO6Fu0K9Zuq4bFUyQ2mVLerHENdjmgZTlLvqxoeS3XGh1IqliOvZTlY7VQ1
        PJaqjA6kVCxHfst2vvpa1fBYqjB+gmaN5ZitGhylXl79EH8rd6Jy2qZysByr7Va1WLf338H7SrmTNW0s
        x+x9o1CZV5Q7WdPEcpQpfhUEldmi3MlKjeUo12MKlTlBuZOVEstRtvgVEFQkfnntOeVOVlcsR9neU3xj
        XBGWo57+VKcpVILlqKf40e6FCpWI5XheuZPV1VaVg+XwvaNOVajEMpYjjotX2Bh6v6sv1etqhzpL8T1H
        RZaxHEAvsBzABLEcXX85Nql4ATKgWSwHMMFBiuUADJYDmGCW5bhVAc1ar3J/WsVyoGnxpNMzyl38XbEc
        aF587+Au/q5YDjQv3qcu5x1Pb1FA8+L5jmn/tpzlwKBsVPFLcW4ZxmM5MEiXqK6Xtmc5MGiXq0lLwpOA
        gMRbbo1/ubVdAdjrXPWFivemuzo+AWB/8eRhPLsOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAIO1svIvCGOM886vqpAAAAAASUVORK5CYII=
</value>
  </data>
</root>